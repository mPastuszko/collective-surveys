#surveyers
  h2 Ankiety
  table.table
    thead: tr
      th
      th 
      th.lead Ukończone
      th.lead Rozpoczęte
      th
    tbody
      tr.success
        td: input type='checkbox' name='display_all' checked=true
        td: span.lead: strong Wszystkie
        td: span.badge.badge-success: span.lead #{@answers[:finished].size}
        td: span.badge: span.lead #{@answers[:all].size}
        td: .btn-group.pull-right
          a.btn href="/designer/#{@module}/results-finished.csv"
            i.icon-download-alt
            '  Pobierz
          a.btn.dropdown-toggle data-toggle='dropdown'
            span.caret
          ul.dropdown-menu
            li: a href="/designer/#{@module}/results-finished.csv"
              i.icon-ok
              '  Ukończone
            li: a href="/designer/#{@module}/results-all.csv"
              i.icon-align-justify
              '  Wszystkie
      - @answers[:surveyers].each do |surveyer|
        tr
          td.toggle: input type='checkbox' name="display[#{surveyer[:name]}]" checked=true
          td: span.lead= surveyer[:name]
          td: span.badge.badge-success: span.lead #{surveyer[:finished].size}
          td: span.badge: span.lead #{surveyer[:all].size}
          td
  javascript:
    function reload_results(event) {
      var surveyers = $('#results-pane #surveyers');
      set_loading_info(event.target);
      $('#results-pane').load(
        "/designer/#{@module}/results-words?sort=#{params[:sort] ||= 'alpha'}&" +
          $('input[name^="display["]').serialize(),
        null,
        function() {
          $('#results-pane #surveyers').replaceWith(surveyers);
          $('#results-pane #surveyers .context-loader').remove();
        });
    }
    function set_loading_info(element) {
      $(element).after('<img src="/img/ajax_loader_gray_16.gif" class="context-loader">');
    }
    $('input[name="display_all"]').click(function(e) {
      $('input[name^="display["]').prop('checked', $(this).prop('checked'))
      reload_results(e);
    });
    $('input[name^="display["]').click(function(e) {
      var all_selected = $('input[name^="display["]').map(function(){
        return $(this).prop('checked')
      }).toArray().indexOf(false) == -1;
      $('input[name="display_all"]').prop('checked', all_selected);
      reload_results(e);
    });
- if @answers[:finished].empty?
  #answers
    .alert.alert-warning.alert-block.lead
      strong Brak wyników... 
      ' Jeszcze nikt z badanych nie ukończył wypełniać ankiety.
- else
  #respondents
    h2 Badani
    .vspace1
    .genders.progress
      - @women_percent = (@genders[:female] * 100.0 / @genders[:all]).round
      - @men_percent = (@genders[:male] * 100.0 / @genders[:all]).round
      .bar.bar-info style="width: #{@women_percent}%"
        ' Kobiety – #{@women_percent}%
      .bar.bar-warning style="width: #{@men_percent}%"
        ' Mężczyźni – #{@men_percent}%
    .lead.text-center w wieku od #{@ages.min} do #{@ages.max} lat (średnio #{@avg_age})
  #answers
    h2 Wyniki
    .well.well-small
      ' Sortuj:
      a.btn.btn-link href=url("/designer/#{@module}/#results") alfabetycznie
      a.btn.btn-link href=url("/designer/#{@module}/?sort=standard_deviation#results") wg odch. std.
      a.btn.btn-link href=url("/designer/#{@module}/?sort=skewness#results") wg skośności
      a.btn.btn-link href=url("/designer/#{@module}/?sort=kurtosis#results") wg kurtozy
      .clearfix
        em.muted Statystyki liczone są dla 6 najczęściej występujących słów w każdym zestawie.
    dl.dl-horizontal.results
      - @results.each do |word_set|
        .clearfix
          dt
            .base-word id="results-#{word_set[:base_word]}"= word_set[:base_word]
            .statistics: strong Dla pierwszych 6 słów:
            .statistics Odch. std.: #{word_set[:statistics_first_6][:standard_deviation].round(2)}
            .statistics Skośność: #{word_set[:statistics_first_6][:skewness].round(2)}
            .statistics Kurtoza: #{word_set[:statistics_first_6][:kurtosis].round(2)}
            .statistics: strong Dla całego zestawu:
            .statistics Odch. std.: #{word_set[:statistics][:standard_deviation].round(2)}
            .statistics Skośność: #{word_set[:statistics][:skewness].round(2)}
            .statistics Kurtoza: #{word_set[:statistics][:kurtosis].round(2)}
            .statistics: strong Podobne rozkłady:
            .statistics
              ol
                - word_set[:similar_distributions].each do |word, diff|
                  li: a href="#results-#{word}"= word
          dd: ul.unstyled
            - fas_first_6 = word_set[:fas_first_6].dup
            - word_set[:histogram].each do |word, frequency|
              li
                span.badge class=badge_for_frequency(frequency) = frequency
                '
                = word
                - unless fas_first_6.empty?
                  span.fas
                    span.muted= "FAS: "
                    = fas_first_6.shift.round(2)
